{"version":3,"sources":["components/Pagination/Pagination.js","App.js","index.js"],"names":["Pagination","React","memo","total","perPageItems","currentPage","onPage","onNext","onPrev","withInfo","numberOfPages","Math","ceil","pages","maxNumber","currPage","arr","push","makeArray","firstItem","lastItem","preparedPages","map","name","index","id","className","type","onClick","disabled","page","key","classNames","button","defaultProps","perPageOptions","App","state","perPage","onPerPageChange","event","setState","target","value","onPageChange","moveToNextPage","moveToPrevPage","this","onChange","option","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"yOAoCO,IAAMA,EAAaC,IAAMC,MAAK,YAQ9B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,aACAC,EAKI,EALJA,YACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,SAEMC,EAAgBC,KAAKC,KAAKT,EAAQC,GAClCS,EA1CR,SAAmBC,EAAWC,GAC5B,IAAMC,EAAM,GA4BZ,OA1BAA,EAAIC,KAAK,GAELF,EAAW,GACbC,EAAIC,KAAK,OAGPF,EAAW,GACbC,EAAIC,KAAKF,EAAW,GAGL,IAAbA,GAAkBA,IAAaD,GACjCE,EAAIC,KAAKF,GAGPD,EAAY,EAAIC,GAClBC,EAAIC,KAAKF,EAAW,GAGlBD,EAAY,EAAIC,GAClBC,EAAIC,KAAK,OAGO,IAAdH,GACFE,EAAIC,KAAKH,GAGJE,EAaOE,CAAUR,EAAeL,GACjCc,GAAad,EAAc,GAAKD,EAAe,EAC/CgB,EAAWf,EAAcD,EAAeD,EAC1CA,EACAE,EAAcD,EACZiB,EAAgBR,EAAMS,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAChDD,OACAE,GAAID,MAGN,OACE,yBAAKE,UAAU,sCACZjB,GACC,qCACMU,EADN,cACqBC,EADrB,eACoCjB,IAGtC,wBAAIuB,UAAU,gBACZ,4BACE,4BACEC,KAAK,SACLD,UAAU,SACVE,QAASpB,EACTqB,SAA0B,IAAhBxB,GAJZ,MAUAgB,EAAcC,KAAI,SAAAQ,GAAI,OACpB,wBAAIC,IAAKD,EAAKL,IACZ,4BACEE,KAAK,SACLD,UAAWM,IAAW,CACpBC,QAAQ,EACR,UAAWH,EAAKP,OAASlB,IAE3BuB,QAAS,kBAAMtB,EAAOwB,EAAKP,OAC3BM,SAAwB,QAAdC,EAAKP,MAEdO,EAAKP,UAKd,4BACE,4BACEI,KAAK,SACLD,UAAU,SACVE,QAASrB,EACTsB,SAAUxB,IAAgBK,GAJ5B,WAwBVV,EAAWkC,aAAe,CACxB9B,aAAc,EACdC,YAAa,EACbI,UAAU,GCnHZ,IAAM0B,EAAiB,CAAC,EAAG,EAAG,GAAI,GAAI,IAuEvBC,E,4MApEbC,MAAQ,CACNhC,YAAa,EACbiC,QAAS,EACTnC,MAAO,I,EAGToC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZH,SAAUE,EAAME,OAAOC,MACvBtC,YAAa,K,EAIjBuC,aAAe,SAACd,GACd,EAAKW,SAAS,CACZpC,YAAayB,K,EAIjBe,eAAiB,WACf,EAAKJ,UAAS,SAAAJ,GAAK,MAAK,CACtBhC,YAAagC,EAAMhC,YAAc,O,EAIrCyC,eAAiB,WACf,EAAKL,UAAS,SAAAJ,GAAK,MAAK,CACtBhC,YAAagC,EAAMhC,YAAc,O,uDAI3B,IAAD,EAC+C0C,KAAKV,MAAnDhC,EADD,EACCA,YAAsBD,EADvB,EACckC,QAAuBnC,EADrC,EACqCA,MAE5C,OACE,yBAAKuB,UAAU,OACb,+BACE,0BAAMA,UAAU,aAAhB,8BACA,yBAAKA,UAAU,kBACb,4BACEiB,MAAOvC,EACP4C,SAAUD,KAAKR,iBAGbJ,EAAeb,KAAI,SAAA2B,GAAM,OACvB,4BAAQlB,IAAKkB,EAAQN,MAAOM,GACzBA,SAQb,kBAACjD,EAAD,CACEG,MAAOA,EACPC,aAAcA,EACdC,YAAaA,EACbC,OAAQyC,KAAKH,aACbpC,OAAQuC,KAAKD,eACbvC,OAAQwC,KAAKF,eACbpC,UAAQ,S,GA9DAR,IAAMiD,eCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1348a988.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction makeArray(maxNumber, currPage) {\n  const arr = [];\n\n  arr.push(1);\n\n  if (currPage > 3) {\n    arr.push('...');\n  }\n\n  if (currPage > 2) {\n    arr.push(currPage - 1);\n  }\n\n  if (currPage !== 1 && currPage !== maxNumber) {\n    arr.push(currPage);\n  }\n\n  if (maxNumber - 1 > currPage) {\n    arr.push(currPage + 1);\n  }\n\n  if (maxNumber - 2 > currPage) {\n    arr.push('...');\n  }\n\n  if (maxNumber !== 1) {\n    arr.push(maxNumber);\n  }\n\n  return arr;\n}\n\nexport const Pagination = React.memo(({\n  total,\n  perPageItems,\n  currentPage,\n  onPage,\n  onNext,\n  onPrev,\n  withInfo,\n}) => {\n  const numberOfPages = Math.ceil(total / perPageItems);\n  const pages = makeArray(numberOfPages, currentPage);\n  const firstItem = (currentPage - 1) * perPageItems + 1;\n  const lastItem = currentPage * perPageItems > total\n    ? total\n    : currentPage * perPageItems;\n  const preparedPages = pages.map((name, index) => ({\n    name,\n    id: index,\n  }));\n\n  return (\n    <nav className=\"is-flex is-align-items-center my-5\">\n      {withInfo && (\n        <p>\n          {`${firstItem} - ${lastItem} of ${total}`}\n        </p>\n      )}\n      <ul className=\"is-flex ml-3\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={onPrev}\n            disabled={currentPage === 1}\n          >\n            {`<`}\n          </button>\n        </li>\n        {\n          preparedPages.map(page => (\n            <li key={page.id}>\n              <button\n                type=\"button\"\n                className={classNames({\n                  button: true,\n                  'is-info': page.name === currentPage,\n                })}\n                onClick={() => onPage(page.name)}\n                disabled={page.name === '...'}\n              >\n                {page.name}\n              </button>\n            </li>\n          ))\n        }\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={onNext}\n            disabled={currentPage === numberOfPages}\n          >\n            {`>`}\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPageItems: PropTypes.number,\n  currentPage: PropTypes.number,\n  onPage: PropTypes.func.isRequired,\n  onPrev: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  perPageItems: 5,\n  currentPage: 1,\n  withInfo: false,\n};\n","import React from 'react';\nimport './app.scss';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst perPageOptions = [3, 5, 10, 20, 50];\n\nclass App extends React.PureComponent {\n  state = {\n    currentPage: 9,\n    perPage: 5,\n    total: 42,\n  }\n\n  onPerPageChange = (event) => {\n    this.setState({\n      perPage: +event.target.value,\n      currentPage: 1,\n    });\n  }\n\n  onPageChange = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n  }\n\n  moveToNextPage = () => {\n    this.setState(state => ({\n      currentPage: state.currentPage + 1,\n    }));\n  }\n\n  moveToPrevPage = () => {\n    this.setState(state => ({\n      currentPage: state.currentPage - 1,\n    }));\n  }\n\n  render() {\n    const { currentPage, perPage: perPageItems, total } = this.state;\n\n    return (\n      <div className=\"app\">\n        <label>\n          <span className=\"is-size-5\">{`Number of items per page: `}</span>\n          <div className=\"select is-info\">\n            <select\n              value={perPageItems}\n              onChange={this.onPerPageChange}\n            >\n              {\n                perPageOptions.map(option => (\n                  <option key={option} value={option}>\n                    {option}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n        </label>\n\n        <Pagination\n          total={total}\n          perPageItems={perPageItems}\n          currentPage={currentPage}\n          onPage={this.onPageChange}\n          onPrev={this.moveToPrevPage}\n          onNext={this.moveToNextPage}\n          withInfo\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}