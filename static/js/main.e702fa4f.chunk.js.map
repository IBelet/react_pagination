{"version":3,"sources":["components/Pagination/Pagination.js","App.js","index.js"],"names":["Pagination","React","memo","total","perPage","page","onPage","onNext","onPrev","withInfo","numberOfPages","Math","ceil","pages","minNumber","maxNumber","arr","i","push","makeArray","firstItem","lastItem","className","type","onClick","disabled","map","num","key","classNames","button","defaultProps","perPageOptions","App","state","currentPage","onPerPageChange","event","setState","target","value","onPageChange","nextPage","prevPage","this","onChange","option","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"+OAcO,IAAMA,EAAaC,IAAMC,MAAK,YAQ9B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,KACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,SAEMC,EAAgBC,KAAKC,KAAKT,EAAQC,GAClCS,EApBR,SAAmBC,EAAWC,GAG5B,IAFA,IAAMC,EAAM,GAEHC,EAAIH,EAAWG,GAAKF,EAAWE,GAAK,EAC3CD,EAAIE,KAAKD,GAGX,OAAOD,EAaOG,CAAU,EAAGT,GACrBU,GAAaf,EAAO,GAAKD,EAAU,EACnCiB,EAAWhB,EAAOD,EAAUD,EAAQA,EAAQE,EAAOD,EAEzD,OACE,yBAAKkB,UAAU,sCACZb,GACC,qCACMW,EADN,cACqBC,EADrB,eACoClB,IAGtC,wBAAImB,UAAU,gBACZ,4BACE,4BACEC,KAAK,SACLD,UAAU,SACVE,QAAShB,EACTiB,SAAmB,IAATpB,GAJZ,SAUAQ,EAAMa,KAAI,SAAAC,GAAG,OACX,wBAAIC,IAAKD,GACP,4BACEJ,KAAK,SACLD,UAAWO,IAAW,CACpBC,QAAQ,EACR,UAAWH,IAAQtB,IAErBmB,QAAS,kBAAMlB,EAAOqB,KAErBA,OAKT,4BACE,4BACEJ,KAAK,SACLD,UAAU,SACVE,QAASjB,EACTkB,SAAUpB,IAASK,GAJrB,cAwBVV,EAAW+B,aAAe,CACxB3B,QAAS,EACTC,KAAM,EACNI,UAAU,GCrFZ,IAAMuB,EAAiB,CAAC,EAAG,EAAG,GAAI,IAoEnBC,E,4MAjEbC,MAAQ,CACNC,YAAa,EACb/B,QAAS,G,EAGXgC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZlC,QAASiC,EAAME,OAAOC,S,EAI1BC,aAAe,SAACpC,GACd,EAAKiC,SAAS,CACZH,YAAa9B,K,EAIjBqC,SAAW,WACT,EAAKJ,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,YAAc,O,EAIrCQ,SAAW,WACT,EAAKL,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,YAAc,O,uDAI3B,IAAD,EAC0BS,KAAKV,MAA9BC,EADD,EACCA,YAAa/B,EADd,EACcA,QAErB,OACE,yBAAKkB,UAAU,OACb,+BACE,0BAAMA,UAAU,aAAhB,8BACA,yBAAKA,UAAU,kBACb,4BACEuB,SAAUD,KAAKR,iBAGbJ,EAAeN,KAAI,SAAAoB,GAAM,OACvB,4BAAQN,MAAOM,GACZA,SAQb,kBAAC9C,EAAD,CACEG,MAAO,GACPC,QAASA,EACTC,KAAM8B,EACN7B,OAAQsC,KAAKH,aACbjC,OAAQoC,KAAKD,SACbpC,OAAQqC,KAAKF,SACbjC,UAAQ,S,GA3DAR,IAAM8C,eCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e702fa4f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction makeArray(minNumber, maxNumber) {\n  const arr = [];\n\n  for (let i = minNumber; i <= maxNumber; i += 1) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nexport const Pagination = React.memo(({\n  total,\n  perPage,\n  page,\n  onPage,\n  onNext,\n  onPrev,\n  withInfo,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = makeArray(1, numberOfPages);\n  const firstItem = (page - 1) * perPage + 1;\n  const lastItem = page * perPage > total ? total : page * perPage;\n\n  return (\n    <nav className=\"is-flex is-align-items-center my-5\">\n      {withInfo && (\n        <p>\n          {`${firstItem} - ${lastItem} of ${total}`}\n        </p>\n      )}\n      <ul className=\"is-flex ml-3\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={onPrev}\n            disabled={page === 1}\n          >\n            Prev\n          </button>\n        </li>\n        {\n          pages.map(num => (\n            <li key={num}>\n              <button\n                type=\"button\"\n                className={classNames({\n                  button: true,\n                  'is-info': num === page,\n                })}\n                onClick={() => onPage(num)}\n              >\n                {num}\n              </button>\n            </li>\n          ))\n        }\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={onNext}\n            disabled={page === numberOfPages}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number,\n  page: PropTypes.number,\n  onPage: PropTypes.func.isRequired,\n  onPrev: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n  withInfo: false,\n};\n","import React from 'react';\nimport './app.scss';\nimport 'bulma/css/bulma.css';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst perPageOptions = [3, 5, 10, 20];\n\nclass App extends React.PureComponent {\n  state = {\n    currentPage: 1,\n    perPage: 5,\n  }\n\n  onPerPageChange = (event) => {\n    this.setState({\n      perPage: event.target.value,\n    });\n  }\n\n  onPageChange = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n  }\n\n  nextPage = () => {\n    this.setState(state => ({\n      currentPage: state.currentPage + 1,\n    }));\n  }\n\n  prevPage = () => {\n    this.setState(state => ({\n      currentPage: state.currentPage - 1,\n    }));\n  }\n\n  render() {\n    const { currentPage, perPage } = this.state;\n\n    return (\n      <div className=\"app\">\n        <label>\n          <span className=\"is-size-5\">{`Number of items per page: `}</span>\n          <div className=\"select is-info\">\n            <select\n              onChange={this.onPerPageChange}\n            >\n              {\n                perPageOptions.map(option => (\n                  <option value={option}>\n                    {option}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n        </label>\n\n        <Pagination\n          total={42}\n          perPage={perPage}\n          page={currentPage}\n          onPage={this.onPageChange}\n          onPrev={this.prevPage}\n          onNext={this.nextPage}\n          withInfo\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}